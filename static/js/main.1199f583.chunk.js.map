{"version":3,"sources":["MapControl.js","MapBoxGLLayer.js","constants.js","LeafletApp.js","index.js"],"names":["ControlWrapper","styled","div","MapControl","controls","values","onChange","props","FormControl","component","FormGroup","map","c","FormControlLabel","key","name","control","Checkbox","size","checked","event","target","label","MapBoxGLLayerComponent","onMouseover","rest","L","mapboxGL","this","mapbox","mapboxMap","getMapboxMap","on","GridLayer","propTypes","accessToken","PropTypes","string","isRequired","style","defaultProps","MapBoxGLLayer","withLeaflet","SATELLITE_MAP_URL","LAYERS","layerNames","layerSegment","LAOS_MAP_CENTER","GERRY_ACCESS_KEY","ATTRIBUTION","BaseLayer","LayersControl","StyledMap","Map","defaultState","reduce","state","App","mapboxLayer","React","useRef","useState","setState","setName","center","zoom","collapsed","TileLayer","url","attribution","ref","interactive","features","properties","G1SHORTNAM","Popup","autoClose","closeButton","closeOnClick","position","layer","current","newVisibility","activeLayer","find","l","forEach","setLayoutProperty","getStyle","layers","id","indexOf","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.1199f583.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nconst ControlWrapper = styled.div`\n  position: absolute;\n  bottom: 30px;\n  right: 10px;\n  border-radius: 3px;\n  background: white;\n  padding: 5px 0 5px 10px;\n  z-index: 1000;\n  box-shadow: 0 3px 4px 0 rgba(0, 0, 0, 0.14),\n    0 3px 3px -2px rgba(0, 0, 0, 0.12), 0 1px 8px 0 rgba(0, 0, 0, 0.2);\n`;\n\nexport const MapControl = ({ controls, values, onChange, ...props }) => (\n  <ControlWrapper {...props}>\n    <FormControl component=\"fieldset\">\n      <FormGroup>\n        {controls.map((c) => (\n          <FormControlLabel\n            key={c.name}\n            control={\n              <Checkbox\n                size=\"small\"\n                checked={values[c.name]}\n                onChange={(event) => onChange(c.name, event.target.checked)}\n                name={c.name}\n              />\n            }\n            label={c.label}\n          />\n        ))}\n      </FormGroup>\n    </FormControl>\n  </ControlWrapper>\n);\n","import L from \"leaflet\";\nimport {} from \"mapbox-gl-leaflet\";\nimport PropTypes from \"prop-types\";\nimport { GridLayer, withLeaflet } from \"react-leaflet\";\n\nclass MapBoxGLLayerComponent extends GridLayer {\n  createLeafletElement(props) {\n    const { onMouseover, ...rest } = props;\n    const map = L.mapboxGL(rest);\n    this.mapbox = map;\n\n    if (onMouseover) {\n      this.onMouseover = onMouseover;\n    }\n\n    return map;\n  }\n\n  componentDidMount() {\n    super.componentDidMount();\n\n    const mapboxMap = this.mapbox.getMapboxMap();\n\n    if (mapboxMap) {\n      mapboxMap.on(\"load\", () => {\n        this.onMouseover(mapboxMap);\n      });\n    }\n  }\n}\n\n/*\n * Props are the options supported by Mapbox Map object\n * Find options here:https://www.mapbox.com/mapbox-gl-js/api/#new-mapboxgl-map-options-\n */\nMapBoxGLLayerComponent.propTypes = {\n  accessToken: PropTypes.string.isRequired,\n  style: PropTypes.string,\n};\n\nMapBoxGLLayerComponent.defaultProps = {\n  style: \"mapbox://styles/mapbox/streets-v9\",\n};\n\nexport const MapBoxGLLayer = withLeaflet(MapBoxGLLayerComponent);\n","export const TOM_MAPBOX_ACCESS_KEY =\n  \"pk.eyJ1IjoiY2FpZ2VydG9tIiwiYSI6ImNrN2luY3Q2NTBsczUzZXF2NzBjcDMyZnIifQ.5j-7bo9L6dzC0VGqeUmsmA\";\n\nconst TUPAIA_TOM_MAPBOX_ACCESS_KEY =\n  \"pk.eyJ1Ijoic3Vzc29sIiwiYSI6ImNqNHMwOW02MzFhaGIycXRjMnZ1dXFlN2gifQ.1sAg5w7hYU7e3LtJM0-hSg\";\n\nexport const STYLE_URL = \"mapbox://styles/caigertom/ckenpd1130k8d19megiz3cupj\";\n\nexport const MAP_CENTER = [-36.8483, 174.7625];\nexport const MAPBOX_MAP_CENTER = [174.7625, -36.8483];\n\nexport const OSM_MAP_URL = \"http://{s}.tile.osm.org/{z}/{x}/{y}.png\";\n\nexport const SATELLITE_MAP_URL = `https://api.mapbox.com/styles/v1/mapbox/satellite-streets-v10/tiles/256/{z}/{x}/{y}?access_token=${TUPAIA_TOM_MAPBOX_ACCESS_KEY}`;\n\nexport const LAYERS = [\n  {\n    name: \"ethnicity\",\n    label: \"Ethnicity\",\n    layerNames: [\"Ethnicity Makeup\"],\n  },\n  {\n    name: \"roads\",\n    label: \"Roads\",\n    layerSegment: [\"road\"],\n  },\n];\n\nexport const LAOS_MAP_CENTER = [18.505, 102.418];\n\n// MAPBOX STYLES\nexport const TOM_WATERWAYS_ROAD =\n  \"mapbox://styles/caigertom/ckexmd0e30lm619lxeu6za5yt\";\n\nexport const GERRY_ACCESS_KEY =\n  \"pk.eyJ1IjoiZ2VkY2tlbGx5IiwiYSI6ImNrY3BsZ2RwYTB3N20yc3FyaTZlNzhzNDUifQ.N61FIOcE-3RTksi9Tlm5ow#10.25/17.9782/102.6277\";\n\nexport const WATERWAYS_STYLE =\n  \"mapbox://styles/gedckelly/ckemdct811px619qklzgvvg53\";\n\nexport const ROAD_STYLE = \"mapbox://styles/gedckelly/ckenp4uq10dfq1anzert7iot7\";\n\nexport const WATERWAYS_ROADS_STYLE =\n  \"mapbox://styles/gedckelly/ckenllwim05jv19mdd6szrsu6\";\n\nexport const TERRAIN_STYLE =\n  \"mapbox://styles/gedckelly/ckenu2thw0ibl1anzk5aarzu6\";\n\nexport const ATTRIBUTION =\n  '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors';\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Map, LayersControl, TileLayer, Popup } from \"react-leaflet\";\nimport { MapControl } from \"./MapControl\";\nimport { MapBoxGLLayer } from \"./MapBoxGLLayer\";\nimport {\n  LAYERS,\n  TOM_MAPBOX_ACCESS_KEY,\n  STYLE_URL,\n  MAP_CENTER,\n  SATELLITE_MAP_URL,\n  TOM_WATERWAYS_ROAD,\n  OSM_MAP_URL,\n  LAOS_MAP_CENTER,\n  GERRY_ACCESS_KEY,\n  WATERWAYS_STYLE,\n  ROAD_STYLE,\n  WATERWAYS_ROADS_STYLE,\n  TERRAIN_STYLE,\n  ATTRIBUTION,\n} from \"./constants\";\nconst { BaseLayer } = LayersControl;\n\nconst StyledMap = styled(Map)`\n  height: 100vh;\n`;\n\nconst defaultState = LAYERS.reduce(\n  (state, { name }) => ({\n    ...state,\n    [name]: true,\n  }),\n  {}\n);\n\nexport const App = () => {\n  const mapboxLayer = React.useRef(null);\n  const [state, setState] = React.useState(defaultState);\n  const [name, setName] = React.useState(null);\n\n  const handleMouseOver = (mapboxMap) => {\n    mapboxMap.on(\"mousemove\", \"Ethnicity Makeup\", (event) => {\n      setName(event.features[0].properties.G1SHORTNAM);\n    });\n\n    mapboxMap.on(\"mouseleave\", \"Ethnicity Makeup\", () => {\n      setName(null);\n    });\n  };\n\n  const handleChange = (layer, checked) => {\n    const map = mapboxLayer.current.mapbox.getMapboxMap();\n\n    if (!map) {\n      return;\n    }\n\n    setState({ ...state, [layer]: checked });\n\n    const newVisibility = checked ? \"visible\" : \"none\";\n    const activeLayer = LAYERS.find((l) => l.name === layer);\n\n    if (\"layerNames\" in activeLayer) {\n      activeLayer.layerNames.forEach((l) => {\n        map.setLayoutProperty(l, \"visibility\", newVisibility);\n      });\n    }\n\n    if (\"layerSegment\" in activeLayer) {\n      map.getStyle().layers.map(function (layer) {\n        if (layer.id.indexOf(activeLayer.layerSegment) >= 0) {\n          map.setLayoutProperty(layer.id, \"visibility\", newVisibility);\n        }\n      });\n    }\n  };\n\n  return (\n    <StyledMap center={LAOS_MAP_CENTER} zoom={7}>\n      <LayersControl collapsed={false}>\n        <BaseLayer name=\"satellite\">\n          <TileLayer url={SATELLITE_MAP_URL} attribution={ATTRIBUTION} />\n        </BaseLayer>\n        <BaseLayer name=\"open street maps\">\n          <TileLayer url={OSM_MAP_URL} attribution={ATTRIBUTION} />\n        </BaseLayer>\n        <BaseLayer name=\"waterways\">\n          <MapBoxGLLayer\n            accessToken={GERRY_ACCESS_KEY}\n            style={WATERWAYS_STYLE}\n          />\n        </BaseLayer>\n        <BaseLayer name=\"roads\">\n          <MapBoxGLLayer accessToken={GERRY_ACCESS_KEY} style={ROAD_STYLE} />\n        </BaseLayer>\n        <BaseLayer checked name=\"waterways-roads\">\n          <MapBoxGLLayer\n            ref={mapboxLayer}\n            accessToken={TOM_MAPBOX_ACCESS_KEY}\n            style={TOM_WATERWAYS_ROAD}\n            interactive={true}\n            onMouseover={handleMouseOver}\n          />\n          {name && (\n            <Popup\n              autoClose={false}\n              closeButton={false}\n              closeOnClick={false}\n              position={LAOS_MAP_CENTER}\n            >\n              {name}\n            </Popup>\n          )}\n        </BaseLayer>\n        <BaseLayer name=\"terrain\">\n          <MapBoxGLLayer accessToken={GERRY_ACCESS_KEY} style={TERRAIN_STYLE} />\n        </BaseLayer>\n        <MapControl controls={LAYERS} values={state} onChange={handleChange} />\n      </LayersControl>\n    </StyledMap>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./LeafletApp\";\n// import { App } from \"./MapBoxApp\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}